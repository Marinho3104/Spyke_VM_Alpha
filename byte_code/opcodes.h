

#define STACK_MEMORY_ALLOCATION 1
#define STACK_MEMORY_DEALLOCATION 2

#define LOAD 4
#define LOAD_INVERTED 5
#define LOAD_GLOBAL 6

#define GO 7
#define GO_STACK_FRAME 8

#define MEMORY_COPY 9
#define MEMORY_COPY_STACK_FRAME 10
#define MEMORY_COPY_ADDRESS 11

#define GET_ADDRESS_FROM_STACK 12

#define CUSTOM_BYTE_CODE 13

#define NOP 14

#define BINARY_ADD 16
#define BINARY_SUB 17
#define BINARY_MUL 18
#define BINARY_DIV 19
#define BINARY_MOD 20

#define CHECK 21

#define JUMP 23
#define JUMP_INVERTED 34

#define BINARY_EQUAL_TO 24
#define BINARY_NOT_EQUAL_TO 25
#define BINARY_GREATER_THAN 26
#define BINARY_LESS_THAN 27
#define BINARY_GREATER_THAN_EQUAL_TO 28
#define BINARY_LESS_THAN_EQUAL_TO 29

#define BINARY_INCREMENT 30
#define BINARY_DECREMENT 31

#define INITIAL_BLOCK_END 32

#define HELPER 33


// Stack memory allocation -- mode

#define STACK_MEMORY_ALLOCATION_MODE_MUL 0

// LOAD INVERTED -- mode

#define LOAD_INVERTED_MODE_MUL 0

// LOAD -- mode

#define LOAD_MODE_ADD 0
#define LOAD_MODE_MUL 1

#define LOAD_STACK_FRAME_MODE_ADD 2







