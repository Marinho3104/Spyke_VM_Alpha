

/* Primitives types size */

#define PRIMITIVE_TYPE_VOID_SIZE 0
#define PRIMITIVE_TYPE_BYTE_SIZE 1
#define PRIMITIVE_TYPE_INT_SIZE 4
#define PRIMITIVE_TYPE_BOOL_SIZE 1
#define PRIMITIVE_TYPE_SPYKE_SIZE 0
#define PRIMITIVE_TYPE_POINTER_SIZE 2


/* Primitive Struct Name */

#define PRIMITIVE_TYPE_VOID_NAME "Void"
#define PRIMITIVE_TYPE_BYTE_NAME "Byte"
#define PRIMITIVE_TYPE_INT_NAME "Int"
#define PRIMITIVE_TYPE_BOOL_NAME "Bool"
#define PRIMITIVE_TYPE_SPYKE_NAME "Spyke"
#define PRIMITIVE_TYPE_POINTER_NAME "Pointer"


/* Operators Function Name */

#define FUNCTION_OPERATOR_PLUS_FUNCTION_NAME "add"
#define FUNCTION_OPERATOR_MINUS_FUNCTION_NAME "sub"
#define FUNCTION_OPERATOR_MULTIPLICATION_FUNCTION_NAME "mul"
#define FUNCTION_OPERATOR_DIVISION_FUNCTION_NAME "div"
#define FUNCTION_OPERATOR_MODULOS_FUNCTION_NAME "mod"

#define FUNCTION_OPERATOR_EQUAL_FUNCTION_NAME "equal"
#define FUNCTION_OPERATOR_PLUS_ASSIGN_FUNCTION_NAME "add_assign"
#define FUNCTION_OPERATOR_MINUS_ASSIGN_FUNCTION_NAME "sub_assign"

#define FUNCTION_OPERATOR_INCREMENT_FUNCTION_NAME "increment"
#define FUNCTION_OPERATOR_DECREMENT_FUNCTION_NAME "decrement"

#define FUNCTION_OPERATOR_INCREMENT_LEFT_FUNCTION_NAME "increment_left"
#define FUNCTION_OPERATOR_DECREMENT_LEFT_FUNCTION_NAME "decrement_left"

#define FUNCTION_OPERATOR_BRACKET_FUNCTION_NAME "bracket"

#define FUNCTION_OPERATOR_NOT_FUNCTION_NAME "not"

#define FUNCTION_OPERATOR_EQUAL_TO_NAME "equal_to"
#define FUNCTION_OPERATOR_NOT_EQUAL_TO_NAME "not_equal_to"
#define FUNCTION_OPERATOR_GREATER_THAN_NAME "greater_than"
#define FUNCTION_OPERATOR_LESS_THAN_NAME "less_than"
#define FUNCTION_OPERATOR_GREATER_THAN_EQUAL_TO_NAME "greater_than_equal_to"
#define FUNCTION_OPERATOR_LESS_THAN_EQUAL_TO_NAME "less_than_equal_to"


